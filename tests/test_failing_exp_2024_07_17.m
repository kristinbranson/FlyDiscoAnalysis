% Where does this script live?
this_script_path = mfilename('fullpath') ;
fly_disco_analysis_test_folder_path = fileparts(this_script_path) ;
fly_disco_analysis_folder_path = fileparts(fly_disco_analysis_test_folder_path) ;
fly_disco_folder_path = fileparts(fly_disco_analysis_folder_path) ;

cluster_billing_account_name = [] ;
user_name_for_configuration_purposes = 'bransonlab' ;
%analysis_parameters = cell(1,0) ;
% analysis_parameters = ...
%          {'doautomaticchecksincoming',true,...
%           'doflytracking',true, ...
%           'doregistration',true,...
%           'doledonoffdetection',true,...
%           'dosexclassification',false,...
%           'dotrackwings',false,...
%           'docomputeperframefeatures',false,...
%           'docomputehoghofperframefeatures',false,...
%           'dojaabadetect',false,...
%           'docomputeperframestats',false,...
%           'doplotperframestats',false,...
%           'domakectraxresultsmovie',false,...
%           'doextradiagnostics',false,...
%           'doanalysisprotocol',false,...
%           'doautomaticcheckscomplete',false, ...
%           'domakeaptresultsmovie',false, ...
%           'doapt',false} ;
analysis_parameters = ...
  {'domakectraxresultsmovie', false, ...
   'domakeaptresultsmovie', false} ;  % takes too long
settings_folder_path = fullfile(fly_disco_analysis_folder_path, 'settings-internal') ;  % for now, want to use internal settings
do_use_bqueue = false ;
do_actually_submit_jobs = false ;
do_try = false ;
do_reset_working_experiments_folder = true ;
submit_host_name = if_not_a_submit_host('submit.int.janelia.org') ;
initial_optional_argument_list = { ...
  'settingsdir', settings_folder_path, ...
  'do_try', do_try, ...
  'do_run_caboose', false } ;
optional_argument_list = horzcat(initial_optional_argument_list, analysis_parameters) ;

read_only_experiments_folder_path = fullfile(fly_disco_folder_path, 'example-experiments', 'erroring-exps-2024-07-17-read-only') ;
working_experiments_folder_path = fullfile(fly_disco_folder_path, 'example-experiments', 'erroring-exps-2024-07-17') ;

% Recopy the working folder from the read-only one
if do_reset_working_experiments_folder || ~exist(working_experiments_folder_path, 'dir')
  fprintf('Resetting working experiments folder...\n') ;
  tic_id = tic() ;
  reset_experiment_working_copies(working_experiments_folder_path, read_only_experiments_folder_path) ;
  elapsed_time = toc(tic_id) ;
  fprintf('Elapsed time: %g s\n', elapsed_time) ;
end

% Find the experiments
%folder_path_from_experiment_index = find_experiment_folders(working_experiments_folder_path) ;
folder_path_from_experiment_index = ...
  { fullfile(fly_disco_folder_path, 'example-experiments', ...
             'erroring-exps-2024-07-17/20210516T101045_rig1_flyBowl1__20XUASCsChrimsonattp18_Giantfiber_KS_redonly10to60RAMP_protocolRGB_0422') } ;

% Call the testing function to do the real work
run_transfero_FlyDiscoPipeline_wrapper_on_experiment_list(...
  folder_path_from_experiment_index, ...
  cluster_billing_account_name, ...
  user_name_for_configuration_purposes, ...
  do_use_bqueue, ...
  do_actually_submit_jobs, ...
  do_try, ...
  submit_host_name, ...
  optional_argument_list{:})

% Check for success in the ACC output files
did_succeed_from_experiment_folder_index = cellfun(@did_analysis_of_experiment_folder_succeed, folder_path_from_experiment_index) ;
did_all_succeed = all(did_succeed_from_experiment_folder_index) ;
if did_all_succeed ,
  fprintf('Test passed.\n') ;
else
  did_fail_from_experiment_folder_index = ~did_succeed_from_experiment_folder_index ;
  folder_path_from_failed_experiment_index = folder_path_from_experiment_index(did_fail_from_experiment_folder_index) ;
  failed_experiment_count = numel(folder_path_from_failed_experiment_index) ;
  experiment_count = numel(folder_path_from_experiment_index) ;
  fprintf('%d of %d experiments failed.  These ones, in particular:\n', failed_experiment_count, experiment_count) ;  
  for i = 1 : numel(folder_path_from_failed_experiment_index) ,
    fprintf('    %s\n', folder_path_from_failed_experiment_index{i}) ;
  end
end
