% Where does this script live?
this_script_path = mfilename('fullpath') ;
fly_disco_analysis_test_folder_path = fileparts(this_script_path) ;
fly_disco_analysis_folder_path = fileparts(fly_disco_analysis_test_folder_path) ;
fly_disco_folder_path = fileparts(fly_disco_analysis_folder_path) ;

user_name_for_configuration_purposes = 'bransonlab' ;
% analysis_parameters = cell(1,0) ;
analysis_parameters = ...
         {'doautomaticchecksincoming','force',...
          'doflytracking','on', ...
          'doregistration','on',...
          'doledonoffdetection','off',...
          'dosexclassification','on',...
          'docomputeperframefeatures','off',...
          'docomputehoghofperframefeatures','off',...
          'doapt','off', ...
          'dojaabadetect','off',...
          'dolocomotionmetrics','off', ...
          'docomputeperframestats','off',...
          'doplotperframestats','off',...
          'domakectraxresultsmovie','off',...
          'domakeaptresultsmovie','off',...
          'doautomaticcheckscomplete','off', ...
          'domakeaptresultsmovie','force'} ;
% analysis_parameters = ...
%          {'doapt','off', ...
%           'dolocomotionmetrics','off', ...
%           'domakectraxresultsmovie','off'} ;
settings_folder_path = fullfile(fly_disco_analysis_folder_path, 'settings-internal') ;  % for now, want to use internal settings
do_use_bqueue = false ;
do_actually_submit_jobs = false ;
do_try = false ;
do_reset_working_experiments_folder = true ;
submit_host_name = if_not_a_submit_host('submit.int.janelia.org') ;
optional_argument_list = { ...
  'settingsdir', settings_folder_path, ...
  'do_try', do_try } ;
optional_argument_list = horzcat(optional_argument_list, analysis_parameters) ;

read_only_experiments_folder_path = fullfile(fly_disco_folder_path, 'example-experiments', 'single-passing-test-suite-experiment-with-tracking-read-only') ;
working_experiments_folder_path = fullfile(fly_disco_folder_path, 'example-experiments', 'single-passing-test-suite-experiment-with-tracking') ;

% Recopy the working folder from the read-only one
if do_reset_working_experiments_folder || ~exist(working_experiments_folder_path, 'dir')
  fprintf('Resetting working experiments folder...\n') ;
  tic_id = tic() ;
  reset_experiment_working_copies(working_experiments_folder_path, read_only_experiments_folder_path) ;
  elapsed_time = toc(tic_id) ;
  fprintf('Elapsed time: %g s\n', elapsed_time) ;
end

% Find the experiments
folder_path_from_experiment_index = find_experiment_folders(working_experiments_folder_path) ;

% Call the testing function to do the real work
run_transfero_FlyDiscoPipeline_wrapper_on_experiment_list(...
  folder_path_from_experiment_index, ...
  [], ...
  user_name_for_configuration_purposes, ...
  do_use_bqueue, ...
  do_actually_submit_jobs, ...
  do_try, ...
  submit_host_name, ...
  optional_argument_list{:})

% Check for success in the ACC output files
did_succeed_from_experiment_folder_index = cellfun(@did_acc_pass_for_experiment_folder, folder_path_from_experiment_index) ;
did_all_succeed = all(did_succeed_from_experiment_folder_index) ;
if did_all_succeed ,
  fprintf('Test passed.\n') ;
else
  fprintf('Test failed.\n') ;  
end
