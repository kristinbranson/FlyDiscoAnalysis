function FlyDiscoAPTTrackWrapper(expdir, varargin)

% Deal with optional arguments
[analysis_protocol, settingsdir, forcecompute, ~, ~, cluster_billing_account_name, sshhost] = ...
  myparse(varargin,...
          'analysis_protocol','current_bubble',...
          'settingsdir', default_settings_folder_path(), ...
          'forcecompute', false, ...
          'debug',false, ...
          'do_run', [], ...
          'cluster_billing_account_name', '', ...
          'sshhost', '') ;

% Read in the data locations
analysis_protocol_folder_path = fullfile(settingsdir, analysis_protocol) ;
datalocparamsfile = fullfile(analysis_protocol_folder_path, 'dataloc_params.txt') ;
dataloc_params = ReadParams(datalocparamsfile) ;

% Figure out where the APT code is
this_script_path = mfilename('fullpath') ;
source_folder_path = fileparts(this_script_path) ;
aptrepopath = fullfile(source_folder_path, 'APT') ;  % use the subrepo APT

% Are we running on a submit host?  If not, use submit.int.janelia.org.
[return_code, ~] = system('/usr/bin/which bsub') ;
if return_code == 0 ,
  submit_host_name = '' ;
else
  submit_host_name = sshhost ;
end

% Call the core function
[success, msgs] = ...
  FlyDiscoAPTTrack(expdir, ...
                   'settingsdir',settingsdir,...
                   'analysis_protocol',analysis_protocol,...
                   'dataloc_params', dataloc_params, ...
                   'dryrun',false,...
                   'verbose',1,...
                   'dowait',true,...
                   'waitchecktime',300,...
                   'dooverwrite',forcecompute, ...
                   'cluster_billing_account_name', cluster_billing_account_name, ...
                   'aptrepopath', aptrepopath, ...
                   'docomputemd5s', true, ...
                   'sshhost', submit_host_name) ;

% Deal with failure
if ~success ,
  stage_name = 'apt' ;
  flydisco_pipeline_error(stage_name, msgs) ;
end

end
