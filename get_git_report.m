function breadcrumb_string = get_git_report(source_repo_folder_path)
    % Use git to get a report about exactly what version of the software lives in
    % source_repo_folder_path.  Returns a string suitable for fprintf()ing to a
    % log.
    
    % Note the current dir, set up a clear to cd back to it when this function
    % exits, and cd to source_repo_folder_path
    original_pwd = pwd() ;
    cleaner = onCleanup(@()(cd(original_pwd))) ;
    cd(source_repo_folder_path) ;
    
    % This is hard to get working in a way that overrides
    % 'url."git@github.com:".insteadOf https://github.com/' for a single command.
    % Plus it hits github every time you run, which seems fragile...
    % % Make sure the git remote is up-to-date
    % system_with_error_handling('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git remote update') ;    
    
    % Get the git status
    [return_code, git_status] = system('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git status') ;    
    if return_code ~= 0 ,
        breadcrumb_string = ...
            sprintf(strcat('Source repo:\n%s\n\nCommit hash:\n', ...
                           '"git status" failed!  If this is not a git repository, it will likely lead to tears eventually!]\n', ...
                           '"git status" output was:\n%s\n\n'), ...
                    source_repo_folder_path, ...
                    git_status) ;                                
        return
    end
    
    % Get the git hash
    stdout = system_with_error_handling('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git rev-parse --verify HEAD') ;
    commit_hash = strtrim(stdout) ;

    % Get the status of all the submodules
    git_submodule_status = system_with_error_handling('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git submodule status --recursive') ;        
    
    % Get the git remote report
    git_remote_report = system_with_error_handling('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git remote -v') ;    
    
    % Get the recent git log
    git_log = system_with_error_handling('env GIT_SSL_NO_VERIFY=true GIT_TERMINAL_PROMPT=0 git --no-pager log --graph --oneline --max-count 10') ;
        
    % Write a file with the commit hash into the folder, for good measure
    breadcrumb_string = ...
        sprintf(['Source repo:\n%s\n\n' ...
                 'Git commit hash:\n%s\n\n' ...
                 'Git submodule status:\n%s\n\n' ...
                 'Git remote info:\n%s\n\n' ...
                 'Git status:\n%s\n\n' ...
                 'Git log:\n%s\n\n'], ...
                source_repo_folder_path, ...
                commit_hash, ...
                git_submodule_status, ...
                git_remote_report, ...
                git_status, ...
                git_log) ;
end
