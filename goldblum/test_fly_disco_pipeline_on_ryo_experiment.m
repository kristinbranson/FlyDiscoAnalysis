%reset_analysis_test_folder();

this_script_file_path = mfilename('fullpath') ;
this_script_folder_path = fileparts(this_script_file_path) ;
fly_disco_analysis_folder_path = fileparts(this_script_folder_path) ;

experiment_folder_path = ...
    fullfile(this_script_folder_path, ...
             'analysis-test-folder', ...
             'locomotionGtACR1_emptySplit24b_RigB_20210216T105603') ;
settings_folder_path = fullfile(fly_disco_analysis_folder_path, 'settings') ;

analysis_parameters = ...
        {'settingsdir', settings_folder_path, ...
         'forcecompute',false,...
         'doautomaticchecksincoming',true,...
         'doflytracking',true,...
         'doregistration',true,...
         'doledonoffdetection',true,...
         'dotrackwings',true,...
         'dosexclassification',true,...
         'docomputeperframefeatures',true,...
         'docomputehoghofperframefeatures',false,...
         'dojaabadetect',true,...
         'docomputeperframestats',false,...
         'doplotperframestats',false,...
         'domakectraxresultsmovie',false,...
         'doextradiagnostics',false,...
         'doanalysisprotocol',false,...
         'doautomaticcheckscomplete',false } ;
        
% Call the function to do the real work
[success, msgs, stage] = FlyDiscoPipeline(experiment_folder_path, analysis_parameters{:}) ;

if success ,
    fprintf('FlyDiscoPipeline() ran successfully!\n') ;
else
    summary_message = sprintf('FlyDiscoPipeline() encountered one or more problems at stage %s:\n', stage) ;
    for i = 1 : length(msgs) ,
        this_msg = msgs{i} ;
        fprintf('%s\n', this_msg) ;
    end
    error(summary_message) ;  %#ok<SPERR>
end
